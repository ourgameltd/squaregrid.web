/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Fixture } from './Fixture';
import {
    FixtureFromJSON,
    FixtureFromJSONTyped,
    FixtureToJSON,
} from './Fixture';
import type { StaffType } from './StaffType';
import {
    StaffTypeFromJSON,
    StaffTypeFromJSONTyped,
    StaffTypeToJSON,
} from './StaffType';
import type { TeamStaff } from './TeamStaff';
import {
    TeamStaffFromJSON,
    TeamStaffFromJSONTyped,
    TeamStaffToJSON,
} from './TeamStaff';

/**
 * 
 * @export
 * @interface FixtureStaff
 */
export interface FixtureStaff {
    /**
     * 
     * @type {string}
     * @memberof FixtureStaff
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof FixtureStaff
     */
    fixtureId?: string;
    /**
     * 
     * @type {string}
     * @memberof FixtureStaff
     */
    teamStaffId?: string;
    /**
     * 
     * @type {string}
     * @memberof FixtureStaff
     */
    staffTypeId?: string;
    /**
     * 
     * @type {Fixture}
     * @memberof FixtureStaff
     */
    fixture?: Fixture;
    /**
     * 
     * @type {StaffType}
     * @memberof FixtureStaff
     */
    staffType?: StaffType;
    /**
     * 
     * @type {TeamStaff}
     * @memberof FixtureStaff
     */
    teamStaff?: TeamStaff;
}

/**
 * Check if a given object implements the FixtureStaff interface.
 */
export function instanceOfFixtureStaff(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FixtureStaffFromJSON(json: any): FixtureStaff {
    return FixtureStaffFromJSONTyped(json, false);
}

export function FixtureStaffFromJSONTyped(json: any, ignoreDiscriminator: boolean): FixtureStaff {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'fixtureId': !exists(json, 'fixtureId') ? undefined : json['fixtureId'],
        'teamStaffId': !exists(json, 'teamStaffId') ? undefined : json['teamStaffId'],
        'staffTypeId': !exists(json, 'staffTypeId') ? undefined : json['staffTypeId'],
        'fixture': !exists(json, 'fixture') ? undefined : FixtureFromJSON(json['fixture']),
        'staffType': !exists(json, 'staffType') ? undefined : StaffTypeFromJSON(json['staffType']),
        'teamStaff': !exists(json, 'teamStaff') ? undefined : TeamStaffFromJSON(json['teamStaff']),
    };
}

export function FixtureStaffToJSON(value?: FixtureStaff | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'fixtureId': value.fixtureId,
        'teamStaffId': value.teamStaffId,
        'staffTypeId': value.staffTypeId,
        'fixture': FixtureToJSON(value.fixture),
        'staffType': StaffTypeToJSON(value.staffType),
        'teamStaff': TeamStaffToJSON(value.teamStaff),
    };
}

