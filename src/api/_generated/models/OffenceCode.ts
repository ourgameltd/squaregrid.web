/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FixtureEvent } from './FixtureEvent';
import {
    FixtureEventFromJSON,
    FixtureEventFromJSONTyped,
    FixtureEventToJSON,
} from './FixtureEvent';

/**
 * 
 * @export
 * @interface OffenceCode
 */
export interface OffenceCode {
    /**
     * 
     * @type {string}
     * @memberof OffenceCode
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof OffenceCode
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof OffenceCode
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof OffenceCode
     */
    eventType?: number;
    /**
     * 
     * @type {Array<FixtureEvent>}
     * @memberof OffenceCode
     */
    fixtureEvents?: Array<FixtureEvent>;
}

/**
 * Check if a given object implements the OffenceCode interface.
 */
export function instanceOfOffenceCode(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OffenceCodeFromJSON(json: any): OffenceCode {
    return OffenceCodeFromJSONTyped(json, false);
}

export function OffenceCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OffenceCode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'eventType': !exists(json, 'eventType') ? undefined : json['eventType'],
        'fixtureEvents': !exists(json, 'fixtureEvents') ? undefined : ((json['fixtureEvents'] as Array<any>).map(FixtureEventFromJSON)),
    };
}

export function OffenceCodeToJSON(value?: OffenceCode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'description': value.description,
        'eventType': value.eventType,
        'fixtureEvents': value.fixtureEvents === undefined ? undefined : ((value.fixtureEvents as Array<any>).map(FixtureEventToJSON)),
    };
}

