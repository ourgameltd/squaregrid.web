/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FixtureStaff } from './FixtureStaff';
import {
    FixtureStaffFromJSON,
    FixtureStaffFromJSONTyped,
    FixtureStaffToJSON,
} from './FixtureStaff';
import type { TeamStaff } from './TeamStaff';
import {
    TeamStaffFromJSON,
    TeamStaffFromJSONTyped,
    TeamStaffToJSON,
} from './TeamStaff';

/**
 * 
 * @export
 * @interface StaffType
 */
export interface StaffType {
    /**
     * 
     * @type {string}
     * @memberof StaffType
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof StaffType
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof StaffType
     */
    description?: string;
    /**
     * 
     * @type {Array<FixtureStaff>}
     * @memberof StaffType
     */
    fixtureStaffs?: Array<FixtureStaff>;
    /**
     * 
     * @type {Array<TeamStaff>}
     * @memberof StaffType
     */
    teamStaffs?: Array<TeamStaff>;
}

/**
 * Check if a given object implements the StaffType interface.
 */
export function instanceOfStaffType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StaffTypeFromJSON(json: any): StaffType {
    return StaffTypeFromJSONTyped(json, false);
}

export function StaffTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StaffType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'fixtureStaffs': !exists(json, 'fixtureStaffs') ? undefined : ((json['fixtureStaffs'] as Array<any>).map(FixtureStaffFromJSON)),
        'teamStaffs': !exists(json, 'teamStaffs') ? undefined : ((json['teamStaffs'] as Array<any>).map(TeamStaffFromJSON)),
    };
}

export function StaffTypeToJSON(value?: StaffType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'description': value.description,
        'fixtureStaffs': value.fixtureStaffs === undefined ? undefined : ((value.fixtureStaffs as Array<any>).map(FixtureStaffToJSON)),
        'teamStaffs': value.teamStaffs === undefined ? undefined : ((value.teamStaffs as Array<any>).map(TeamStaffToJSON)),
    };
}

