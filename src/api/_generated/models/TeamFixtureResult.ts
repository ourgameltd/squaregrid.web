/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Fixture } from './Fixture';
import {
    FixtureFromJSON,
    FixtureFromJSONTyped,
    FixtureToJSON,
} from './Fixture';
import type { Official } from './Official';
import {
    OfficialFromJSON,
    OfficialFromJSONTyped,
    OfficialToJSON,
} from './Official';
import type { Team } from './Team';
import {
    TeamFromJSON,
    TeamFromJSONTyped,
    TeamToJSON,
} from './Team';
import type { Venue } from './Venue';
import {
    VenueFromJSON,
    VenueFromJSONTyped,
    VenueToJSON,
} from './Venue';

/**
 * 
 * @export
 * @interface TeamFixtureResult
 */
export interface TeamFixtureResult {
    /**
     * 
     * @type {string}
     * @memberof TeamFixtureResult
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof TeamFixtureResult
     */
    date?: Date;
    /**
     * 
     * @type {number}
     * @memberof TeamFixtureResult
     */
    homeScore?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamFixtureResult
     */
    awayScore?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamFixtureResult
     */
    homeAetScore?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamFixtureResult
     */
    awayAetScore?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamFixtureResult
     */
    homeTeamPenaltyScore?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamFixtureResult
     */
    awayTeamPenaltyScore?: number;
    /**
     * 
     * @type {string}
     * @memberof TeamFixtureResult
     */
    fixtureId?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamFixtureResult
     */
    homeId?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamFixtureResult
     */
    awayId?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamFixtureResult
     */
    refereeId?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamFixtureResult
     */
    venueId?: string;
    /**
     * 
     * @type {Team}
     * @memberof TeamFixtureResult
     */
    away?: Team;
    /**
     * 
     * @type {Fixture}
     * @memberof TeamFixtureResult
     */
    fixture?: Fixture;
    /**
     * 
     * @type {Team}
     * @memberof TeamFixtureResult
     */
    home?: Team;
    /**
     * 
     * @type {Official}
     * @memberof TeamFixtureResult
     */
    referee?: Official;
    /**
     * 
     * @type {Venue}
     * @memberof TeamFixtureResult
     */
    venue?: Venue;
}

/**
 * Check if a given object implements the TeamFixtureResult interface.
 */
export function instanceOfTeamFixtureResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TeamFixtureResultFromJSON(json: any): TeamFixtureResult {
    return TeamFixtureResultFromJSONTyped(json, false);
}

export function TeamFixtureResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamFixtureResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'homeScore': !exists(json, 'homeScore') ? undefined : json['homeScore'],
        'awayScore': !exists(json, 'awayScore') ? undefined : json['awayScore'],
        'homeAetScore': !exists(json, 'homeAetScore') ? undefined : json['homeAetScore'],
        'awayAetScore': !exists(json, 'awayAetScore') ? undefined : json['awayAetScore'],
        'homeTeamPenaltyScore': !exists(json, 'homeTeamPenaltyScore') ? undefined : json['homeTeamPenaltyScore'],
        'awayTeamPenaltyScore': !exists(json, 'awayTeamPenaltyScore') ? undefined : json['awayTeamPenaltyScore'],
        'fixtureId': !exists(json, 'fixtureId') ? undefined : json['fixtureId'],
        'homeId': !exists(json, 'homeId') ? undefined : json['homeId'],
        'awayId': !exists(json, 'awayId') ? undefined : json['awayId'],
        'refereeId': !exists(json, 'refereeId') ? undefined : json['refereeId'],
        'venueId': !exists(json, 'venueId') ? undefined : json['venueId'],
        'away': !exists(json, 'away') ? undefined : TeamFromJSON(json['away']),
        'fixture': !exists(json, 'fixture') ? undefined : FixtureFromJSON(json['fixture']),
        'home': !exists(json, 'home') ? undefined : TeamFromJSON(json['home']),
        'referee': !exists(json, 'referee') ? undefined : OfficialFromJSON(json['referee']),
        'venue': !exists(json, 'venue') ? undefined : VenueFromJSON(json['venue']),
    };
}

export function TeamFixtureResultToJSON(value?: TeamFixtureResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'date': value.date === undefined ? undefined : (value.date.toISOString()),
        'homeScore': value.homeScore,
        'awayScore': value.awayScore,
        'homeAetScore': value.homeAetScore,
        'awayAetScore': value.awayAetScore,
        'homeTeamPenaltyScore': value.homeTeamPenaltyScore,
        'awayTeamPenaltyScore': value.awayTeamPenaltyScore,
        'fixtureId': value.fixtureId,
        'homeId': value.homeId,
        'awayId': value.awayId,
        'refereeId': value.refereeId,
        'venueId': value.venueId,
        'away': TeamToJSON(value.away),
        'fixture': FixtureToJSON(value.fixture),
        'home': TeamToJSON(value.home),
        'referee': OfficialToJSON(value.referee),
        'venue': VenueToJSON(value.venue),
    };
}

