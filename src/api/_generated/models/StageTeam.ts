/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Stage } from './Stage';
import {
    StageFromJSON,
    StageFromJSONTyped,
    StageToJSON,
} from './Stage';
import type { Team } from './Team';
import {
    TeamFromJSON,
    TeamFromJSONTyped,
    TeamToJSON,
} from './Team';

/**
 * 
 * @export
 * @interface StageTeam
 */
export interface StageTeam {
    /**
     * 
     * @type {string}
     * @memberof StageTeam
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof StageTeam
     */
    stageId?: string;
    /**
     * 
     * @type {string}
     * @memberof StageTeam
     */
    teamId?: string;
    /**
     * 
     * @type {Stage}
     * @memberof StageTeam
     */
    stage?: Stage;
    /**
     * 
     * @type {Team}
     * @memberof StageTeam
     */
    team?: Team;
}

/**
 * Check if a given object implements the StageTeam interface.
 */
export function instanceOfStageTeam(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StageTeamFromJSON(json: any): StageTeam {
    return StageTeamFromJSONTyped(json, false);
}

export function StageTeamFromJSONTyped(json: any, ignoreDiscriminator: boolean): StageTeam {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'stageId': !exists(json, 'stageId') ? undefined : json['stageId'],
        'teamId': !exists(json, 'teamId') ? undefined : json['teamId'],
        'stage': !exists(json, 'stage') ? undefined : StageFromJSON(json['stage']),
        'team': !exists(json, 'team') ? undefined : TeamFromJSON(json['team']),
    };
}

export function StageTeamToJSON(value?: StageTeam | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'stageId': value.stageId,
        'teamId': value.teamId,
        'stage': StageToJSON(value.stage),
        'team': TeamToJSON(value.team),
    };
}

