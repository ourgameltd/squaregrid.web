/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Association } from './Association';
import {
    AssociationFromJSON,
    AssociationFromJSONTyped,
    AssociationToJSON,
} from './Association';
import type { Team } from './Team';
import {
    TeamFromJSON,
    TeamFromJSONTyped,
    TeamToJSON,
} from './Team';

/**
 * 
 * @export
 * @interface AssociationTeam
 */
export interface AssociationTeam {
    /**
     * 
     * @type {string}
     * @memberof AssociationTeam
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AssociationTeam
     */
    associationId?: string;
    /**
     * 
     * @type {string}
     * @memberof AssociationTeam
     */
    teamId?: string;
    /**
     * 
     * @type {Association}
     * @memberof AssociationTeam
     */
    association?: Association;
    /**
     * 
     * @type {Team}
     * @memberof AssociationTeam
     */
    team?: Team;
}

/**
 * Check if a given object implements the AssociationTeam interface.
 */
export function instanceOfAssociationTeam(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AssociationTeamFromJSON(json: any): AssociationTeam {
    return AssociationTeamFromJSONTyped(json, false);
}

export function AssociationTeamFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssociationTeam {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'associationId': !exists(json, 'associationId') ? undefined : json['associationId'],
        'teamId': !exists(json, 'teamId') ? undefined : json['teamId'],
        'association': !exists(json, 'association') ? undefined : AssociationFromJSON(json['association']),
        'team': !exists(json, 'team') ? undefined : TeamFromJSON(json['team']),
    };
}

export function AssociationTeamToJSON(value?: AssociationTeam | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'associationId': value.associationId,
        'teamId': value.teamId,
        'association': AssociationToJSON(value.association),
        'team': TeamToJSON(value.team),
    };
}

