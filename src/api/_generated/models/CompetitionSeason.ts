/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Competition } from './Competition';
import {
    CompetitionFromJSON,
    CompetitionFromJSONTyped,
    CompetitionToJSON,
} from './Competition';
import type { Season } from './Season';
import {
    SeasonFromJSON,
    SeasonFromJSONTyped,
    SeasonToJSON,
} from './Season';
import type { Stage } from './Stage';
import {
    StageFromJSON,
    StageFromJSONTyped,
    StageToJSON,
} from './Stage';

/**
 * 
 * @export
 * @interface CompetitionSeason
 */
export interface CompetitionSeason {
    /**
     * 
     * @type {string}
     * @memberof CompetitionSeason
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CompetitionSeason
     */
    competitionId?: string;
    /**
     * 
     * @type {string}
     * @memberof CompetitionSeason
     */
    seasonId?: string;
    /**
     * 
     * @type {Competition}
     * @memberof CompetitionSeason
     */
    competition?: Competition;
    /**
     * 
     * @type {Season}
     * @memberof CompetitionSeason
     */
    season?: Season;
    /**
     * 
     * @type {Array<Stage>}
     * @memberof CompetitionSeason
     */
    stages?: Array<Stage>;
}

/**
 * Check if a given object implements the CompetitionSeason interface.
 */
export function instanceOfCompetitionSeason(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CompetitionSeasonFromJSON(json: any): CompetitionSeason {
    return CompetitionSeasonFromJSONTyped(json, false);
}

export function CompetitionSeasonFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompetitionSeason {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'competitionId': !exists(json, 'competitionId') ? undefined : json['competitionId'],
        'seasonId': !exists(json, 'seasonId') ? undefined : json['seasonId'],
        'competition': !exists(json, 'competition') ? undefined : CompetitionFromJSON(json['competition']),
        'season': !exists(json, 'season') ? undefined : SeasonFromJSON(json['season']),
        'stages': !exists(json, 'stages') ? undefined : ((json['stages'] as Array<any>).map(StageFromJSON)),
    };
}

export function CompetitionSeasonToJSON(value?: CompetitionSeason | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'competitionId': value.competitionId,
        'seasonId': value.seasonId,
        'competition': CompetitionToJSON(value.competition),
        'season': SeasonToJSON(value.season),
        'stages': value.stages === undefined ? undefined : ((value.stages as Array<any>).map(StageToJSON)),
    };
}

