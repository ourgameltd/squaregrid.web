/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AssociationStaff } from './AssociationStaff';
import {
    AssociationStaffFromJSON,
    AssociationStaffFromJSONTyped,
    AssociationStaffToJSON,
} from './AssociationStaff';

/**
 * 
 * @export
 * @interface AssociationStaffType
 */
export interface AssociationStaffType {
    /**
     * 
     * @type {string}
     * @memberof AssociationStaffType
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AssociationStaffType
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof AssociationStaffType
     */
    description?: string;
    /**
     * 
     * @type {Array<AssociationStaff>}
     * @memberof AssociationStaffType
     */
    associationStaffs?: Array<AssociationStaff>;
}

/**
 * Check if a given object implements the AssociationStaffType interface.
 */
export function instanceOfAssociationStaffType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AssociationStaffTypeFromJSON(json: any): AssociationStaffType {
    return AssociationStaffTypeFromJSONTyped(json, false);
}

export function AssociationStaffTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssociationStaffType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'associationStaffs': !exists(json, 'associationStaffs') ? undefined : ((json['associationStaffs'] as Array<any>).map(AssociationStaffFromJSON)),
    };
}

export function AssociationStaffTypeToJSON(value?: AssociationStaffType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'description': value.description,
        'associationStaffs': value.associationStaffs === undefined ? undefined : ((value.associationStaffs as Array<any>).map(AssociationStaffToJSON)),
    };
}

