/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Fixture } from './Fixture';
import {
    FixtureFromJSON,
    FixtureFromJSONTyped,
    FixtureToJSON,
} from './Fixture';
import type { TeamPlayer } from './TeamPlayer';
import {
    TeamPlayerFromJSON,
    TeamPlayerFromJSONTyped,
    TeamPlayerToJSON,
} from './TeamPlayer';

/**
 * 
 * @export
 * @interface FixturePlayer
 */
export interface FixturePlayer {
    /**
     * 
     * @type {string}
     * @memberof FixturePlayer
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof FixturePlayer
     */
    squadNum?: number;
    /**
     * 
     * @type {boolean}
     * @memberof FixturePlayer
     */
    captain?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FixturePlayer
     */
    starting?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FixturePlayer
     */
    keeper?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FixturePlayer
     */
    substitute?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FixturePlayer
     */
    trialist?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FixturePlayer
     */
    trialistName?: string;
    /**
     * 
     * @type {string}
     * @memberof FixturePlayer
     */
    fixtureId?: string;
    /**
     * 
     * @type {string}
     * @memberof FixturePlayer
     */
    teamPlayerId?: string;
    /**
     * 
     * @type {Fixture}
     * @memberof FixturePlayer
     */
    fixture?: Fixture;
    /**
     * 
     * @type {TeamPlayer}
     * @memberof FixturePlayer
     */
    teamPlayer?: TeamPlayer;
}

/**
 * Check if a given object implements the FixturePlayer interface.
 */
export function instanceOfFixturePlayer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FixturePlayerFromJSON(json: any): FixturePlayer {
    return FixturePlayerFromJSONTyped(json, false);
}

export function FixturePlayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): FixturePlayer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'squadNum': !exists(json, 'squadNum') ? undefined : json['squadNum'],
        'captain': !exists(json, 'captain') ? undefined : json['captain'],
        'starting': !exists(json, 'starting') ? undefined : json['starting'],
        'keeper': !exists(json, 'keeper') ? undefined : json['keeper'],
        'substitute': !exists(json, 'substitute') ? undefined : json['substitute'],
        'trialist': !exists(json, 'trialist') ? undefined : json['trialist'],
        'trialistName': !exists(json, 'trialistName') ? undefined : json['trialistName'],
        'fixtureId': !exists(json, 'fixtureId') ? undefined : json['fixtureId'],
        'teamPlayerId': !exists(json, 'teamPlayerId') ? undefined : json['teamPlayerId'],
        'fixture': !exists(json, 'fixture') ? undefined : FixtureFromJSON(json['fixture']),
        'teamPlayer': !exists(json, 'teamPlayer') ? undefined : TeamPlayerFromJSON(json['teamPlayer']),
    };
}

export function FixturePlayerToJSON(value?: FixturePlayer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'squadNum': value.squadNum,
        'captain': value.captain,
        'starting': value.starting,
        'keeper': value.keeper,
        'substitute': value.substitute,
        'trialist': value.trialist,
        'trialistName': value.trialistName,
        'fixtureId': value.fixtureId,
        'teamPlayerId': value.teamPlayerId,
        'fixture': FixtureToJSON(value.fixture),
        'teamPlayer': TeamPlayerToJSON(value.teamPlayer),
    };
}

