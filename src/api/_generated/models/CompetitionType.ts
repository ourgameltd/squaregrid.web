/* tslint:disable */
/* eslint-disable */
/**
 * Our Game Api
 * Api calls and message processing functions for the Our Game app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Competition } from './Competition';
import {
    CompetitionFromJSON,
    CompetitionFromJSONTyped,
    CompetitionToJSON,
} from './Competition';

/**
 * 
 * @export
 * @interface CompetitionType
 */
export interface CompetitionType {
    /**
     * 
     * @type {string}
     * @memberof CompetitionType
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CompetitionType
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof CompetitionType
     */
    description?: string;
    /**
     * 
     * @type {Array<Competition>}
     * @memberof CompetitionType
     */
    competitions?: Array<Competition>;
}

/**
 * Check if a given object implements the CompetitionType interface.
 */
export function instanceOfCompetitionType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CompetitionTypeFromJSON(json: any): CompetitionType {
    return CompetitionTypeFromJSONTyped(json, false);
}

export function CompetitionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompetitionType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'competitions': !exists(json, 'competitions') ? undefined : ((json['competitions'] as Array<any>).map(CompetitionFromJSON)),
    };
}

export function CompetitionTypeToJSON(value?: CompetitionType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'description': value.description,
        'competitions': value.competitions === undefined ? undefined : ((value.competitions as Array<any>).map(CompetitionToJSON)),
    };
}

