{
  "routes": [
    {
      "route": "/.auth/login/aad",
      "statusCode": 401
    },
    {
      "route": "/.auth/login/twitter",
      "statusCode": 401
    },
    {
      "route": "/.auth/login/facebook",
      "statusCode": 401
    },
    {
      "route": "/.auth/login/apple",
      "statusCode": 401
    },
    {
      "route": "/.auth/login/github",
      "statusCode": 401
    },
    {
      "route": "/.auth/login/google",
      "statusCode": 401
    },
    {
      "route": "/api/*",
      "methods": ["GET", "POST", "PUT", "DELETE"],
      "allowedRoles": ["authenticated"]
    },
    {
      "route": "/*.{png,jpg,gif,css,js,svg,woff,woff2,ico}",
      "allowedRoles": ["anonymous"]
    },
    {
      "route": "/login",
      "redirect": "/.auth/login/ourgame",
      "statusCode": 301
    },
    {
      "route": "/logout",
      "redirect": "/.auth/logout",
      "statusCode": 301
    },
    {
      "route": "/rest/openapi",
      "redirect": "/data-api/rest/openapi",
      "statusCode": 301
    },
    {
      "route": "/*",
      "allowedRoles": ["authenticated"]
    }
  ],
  "auth": {
    "identityProviders": {
      "customOpenIdConnectProviders":{
        "ourgame": {
          "registration": {
            "clientIdSettingName": "OURGAME_CLIENT_ID",
            "clientCredential": {
              "clientSecretSettingName": "OURGAME_CLIENT_SECRET"
            },
            "openIdConnectConfiguration": {
              "wellKnownOpenIdConfiguration": "https://ourgameauth.b2clogin.com/ourgameauth.onmicrosoft.com/B2C_1_SUSI/v2.0/.well-known/openid-configuration"
            }
          },
          "login": {
            "nameClaimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
            "scopes": [],
            "loginParameterNames": []
          }
        }
      }
    }
  },
  "responseOverrides": {
    "401": {
      "statusCode": 302,
      "redirect": "/login"
    }
  },
  "platform": {
    "apiRuntime": "dotnet:6.0"
  },
  "navigationFallback": {
    "rewrite": "index.html",
    "exclude": ["/images/*.{png,jpg,gif}", "/css/*", "*.svg"]
  },
  "mimeTypes": {
    ".json": "text/json"
  }
}
