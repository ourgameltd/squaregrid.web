{
  "openapi": "3.0.1",
  "info": {
    "title": "Our Game Api",
    "description": "Api calls and message processing functions for the Our Game app",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:7059/api"
    }
  ],
  "paths": {
    "/adjustmenttype/{id}": {
      "get": {
        "tags": [
          "AdjustmentTypes"
        ],
        "summary": "Get a adjustmenttype",
        "description": "Gets a adjustmenttype from its database ID.",
        "operationId": "FindAdjustmentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of AdjustmentType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/adjustmentType"
                }
              }
            },
            "x-ms-summary": "AdjustmentType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "AdjustmentTypes"
        ],
        "summary": "Update a adjustmenttypes",
        "description": "Update a adjustmenttype in the database",
        "operationId": "UpdateAdjustmentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/adjustmentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of AdjustmentType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/adjustmentType"
                }
              }
            },
            "x-ms-summary": "AdjustmentType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "AdjustmentTypes"
        ],
        "summary": "Delete a adjustmenttype",
        "description": "Delete a adjustmenttype from its database ID.",
        "operationId": "DeleteAdjustmentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/adjustmenttype": {
      "get": {
        "tags": [
          "AdjustmentTypes"
        ],
        "summary": "Search all adjustmenttypes",
        "description": "Search for adjustmenttypes paged",
        "operationId": "SearchAdjustmentTypes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of AdjustmentType",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/adjustmentType"
                  }
                }
              }
            },
            "x-ms-summary": "AdjustmentType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "AdjustmentTypes"
        ],
        "summary": "Add a adjustmenttypes",
        "description": "Add a new adjustmenttype to the databsse",
        "operationId": "AddAdjustmentType",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/adjustmentType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of AdjustmentType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/adjustmentType"
                }
              }
            },
            "x-ms-summary": "AdjustmentType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/association/{id}": {
      "get": {
        "tags": [
          "Associations"
        ],
        "summary": "Get a association",
        "description": "Gets a association from its database ID.",
        "operationId": "FindAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Association",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/association"
                }
              }
            },
            "x-ms-summary": "Association entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Associations"
        ],
        "summary": "Update a associations",
        "description": "Update a association in the database",
        "operationId": "UpdateAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/association"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Association",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/association"
                }
              }
            },
            "x-ms-summary": "Association entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Associations"
        ],
        "summary": "Delete a association",
        "description": "Delete a association from its database ID.",
        "operationId": "DeleteAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/association": {
      "get": {
        "tags": [
          "Associations"
        ],
        "summary": "Search all associations",
        "description": "Search for associations paged",
        "operationId": "SearchAssociations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Association",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/association"
                  }
                }
              }
            },
            "x-ms-summary": "Association entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Associations"
        ],
        "summary": "Add a associations",
        "description": "Add a new association to the databsse",
        "operationId": "AddAssociation",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/association"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Association",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/association"
                }
              }
            },
            "x-ms-summary": "Association entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/associationstaff/{id}": {
      "get": {
        "tags": [
          "AssociationStaffs"
        ],
        "summary": "Get a associationstaff",
        "description": "Gets a associationstaff from its database ID.",
        "operationId": "FindAssociationStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of AssociationStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationStaff"
                }
              }
            },
            "x-ms-summary": "AssociationStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "AssociationStaffs"
        ],
        "summary": "Update a associationstaffs",
        "description": "Update a associationstaff in the database",
        "operationId": "UpdateAssociationStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/associationStaff"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of AssociationStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationStaff"
                }
              }
            },
            "x-ms-summary": "AssociationStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "AssociationStaffs"
        ],
        "summary": "Delete a associationstaff",
        "description": "Delete a associationstaff from its database ID.",
        "operationId": "DeleteAssociationStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/associationstaff": {
      "get": {
        "tags": [
          "AssociationStaffs"
        ],
        "summary": "Search all associationstaffs",
        "description": "Search for associationstaffs paged",
        "operationId": "SearchAssociationStaffs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of AssociationStaff",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/associationStaff"
                  }
                }
              }
            },
            "x-ms-summary": "AssociationStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "AssociationStaffs"
        ],
        "summary": "Add a associationstaffs",
        "description": "Add a new associationstaff to the databsse",
        "operationId": "AddAssociationStaff",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/associationStaff"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of AssociationStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationStaff"
                }
              }
            },
            "x-ms-summary": "AssociationStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/associationstafftype/{id}": {
      "get": {
        "tags": [
          "AssociationStaffTypes"
        ],
        "summary": "Get a associationstafftype",
        "description": "Gets a associationstafftype from its database ID.",
        "operationId": "FindAssociationStaffType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of AssociationStaffType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationStaffType"
                }
              }
            },
            "x-ms-summary": "AssociationStaffType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "AssociationStaffTypes"
        ],
        "summary": "Update a associationstafftypes",
        "description": "Update a associationstafftype in the database",
        "operationId": "UpdateAssociationStaffType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/associationStaffType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of AssociationStaffType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationStaffType"
                }
              }
            },
            "x-ms-summary": "AssociationStaffType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "AssociationStaffTypes"
        ],
        "summary": "Delete a associationstafftype",
        "description": "Delete a associationstafftype from its database ID.",
        "operationId": "DeleteAssociationStaffType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/associationstafftype": {
      "get": {
        "tags": [
          "AssociationStaffTypes"
        ],
        "summary": "Search all associationstafftypes",
        "description": "Search for associationstafftypes paged",
        "operationId": "SearchAssociationStaffTypes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of AssociationStaffType",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/associationStaffType"
                  }
                }
              }
            },
            "x-ms-summary": "AssociationStaffType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "AssociationStaffTypes"
        ],
        "summary": "Add a associationstafftypes",
        "description": "Add a new associationstafftype to the databsse",
        "operationId": "AddAssociationStaffType",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/associationStaffType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of AssociationStaffType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationStaffType"
                }
              }
            },
            "x-ms-summary": "AssociationStaffType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/associationteam/{id}": {
      "get": {
        "tags": [
          "AssociationTeams"
        ],
        "summary": "Get a associationteam",
        "description": "Gets a associationteam from its database ID.",
        "operationId": "FindAssociationTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of AssociationTeam",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationTeam"
                }
              }
            },
            "x-ms-summary": "AssociationTeam entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "AssociationTeams"
        ],
        "summary": "Update a associationteams",
        "description": "Update a associationteam in the database",
        "operationId": "UpdateAssociationTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/associationTeam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of AssociationTeam",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationTeam"
                }
              }
            },
            "x-ms-summary": "AssociationTeam entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "AssociationTeams"
        ],
        "summary": "Delete a associationteam",
        "description": "Delete a associationteam from its database ID.",
        "operationId": "DeleteAssociationTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/associationteam": {
      "get": {
        "tags": [
          "AssociationTeams"
        ],
        "summary": "Search all associationteams",
        "description": "Search for associationteams paged",
        "operationId": "SearchAssociationTeams",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of AssociationTeam",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/associationTeam"
                  }
                }
              }
            },
            "x-ms-summary": "AssociationTeam entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "AssociationTeams"
        ],
        "summary": "Add a associationteams",
        "description": "Add a new associationteam to the databsse",
        "operationId": "AddAssociationTeam",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/associationTeam"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of AssociationTeam",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/associationTeam"
                }
              }
            },
            "x-ms-summary": "AssociationTeam entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/club/{id}": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Get a club",
        "description": "Gets a club from its database ID.",
        "operationId": "FindClub",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Club",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/club"
                }
              }
            },
            "x-ms-summary": "Club entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Clubs"
        ],
        "summary": "Update a clubs",
        "description": "Update a club in the database",
        "operationId": "UpdateClub",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/club"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Club",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/club"
                }
              }
            },
            "x-ms-summary": "Club entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Clubs"
        ],
        "summary": "Delete a club",
        "description": "Delete a club from its database ID.",
        "operationId": "DeleteClub",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/club": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Search all clubs",
        "description": "Search for clubs paged",
        "operationId": "SearchClubs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Club",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/club"
                  }
                }
              }
            },
            "x-ms-summary": "Club entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Clubs"
        ],
        "summary": "Add a clubs",
        "description": "Add a new club to the databsse",
        "operationId": "AddClub",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/club"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Club",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/club"
                }
              }
            },
            "x-ms-summary": "Club entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/competition/{id}": {
      "get": {
        "tags": [
          "Competitions"
        ],
        "summary": "Get a competition",
        "description": "Gets a competition from its database ID.",
        "operationId": "FindCompetition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Competition",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competition"
                }
              }
            },
            "x-ms-summary": "Competition entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Competitions"
        ],
        "summary": "Update a competitions",
        "description": "Update a competition in the database",
        "operationId": "UpdateCompetition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/competition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Competition",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competition"
                }
              }
            },
            "x-ms-summary": "Competition entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Competitions"
        ],
        "summary": "Delete a competition",
        "description": "Delete a competition from its database ID.",
        "operationId": "DeleteCompetition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/competition": {
      "get": {
        "tags": [
          "Competitions"
        ],
        "summary": "Search all competitions",
        "description": "Search for competitions paged",
        "operationId": "SearchCompetitions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Competition",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/competition"
                  }
                }
              }
            },
            "x-ms-summary": "Competition entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Competitions"
        ],
        "summary": "Add a competitions",
        "description": "Add a new competition to the databsse",
        "operationId": "AddCompetition",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/competition"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Competition",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competition"
                }
              }
            },
            "x-ms-summary": "Competition entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/competitionseason/{id}": {
      "get": {
        "tags": [
          "CompetitionSeasons"
        ],
        "summary": "Get a competitionseason",
        "description": "Gets a competitionseason from its database ID.",
        "operationId": "FindCompetitionSeason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of CompetitionSeason",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competitionSeason"
                }
              }
            },
            "x-ms-summary": "CompetitionSeason entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "CompetitionSeasons"
        ],
        "summary": "Update a competitionseasons",
        "description": "Update a competitionseason in the database",
        "operationId": "UpdateCompetitionSeason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/competitionSeason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of CompetitionSeason",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competitionSeason"
                }
              }
            },
            "x-ms-summary": "CompetitionSeason entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "CompetitionSeasons"
        ],
        "summary": "Delete a competitionseason",
        "description": "Delete a competitionseason from its database ID.",
        "operationId": "DeleteCompetitionSeason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/competitionseason": {
      "get": {
        "tags": [
          "CompetitionSeasons"
        ],
        "summary": "Search all competitionseasons",
        "description": "Search for competitionseasons paged",
        "operationId": "SearchCompetitionSeasons",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of CompetitionSeason",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/competitionSeason"
                  }
                }
              }
            },
            "x-ms-summary": "CompetitionSeason entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "CompetitionSeasons"
        ],
        "summary": "Add a competitionseasons",
        "description": "Add a new competitionseason to the databsse",
        "operationId": "AddCompetitionSeason",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/competitionSeason"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of CompetitionSeason",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competitionSeason"
                }
              }
            },
            "x-ms-summary": "CompetitionSeason entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/competitiontype/{id}": {
      "get": {
        "tags": [
          "CompetitionTypes"
        ],
        "summary": "Get a competitiontype",
        "description": "Gets a competitiontype from its database ID.",
        "operationId": "FindCompetitionType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of CompetitionType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competitionType"
                }
              }
            },
            "x-ms-summary": "CompetitionType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "CompetitionTypes"
        ],
        "summary": "Update a competitiontypes",
        "description": "Update a competitiontype in the database",
        "operationId": "UpdateCompetitionType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/competitionType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of CompetitionType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competitionType"
                }
              }
            },
            "x-ms-summary": "CompetitionType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "CompetitionTypes"
        ],
        "summary": "Delete a competitiontype",
        "description": "Delete a competitiontype from its database ID.",
        "operationId": "DeleteCompetitionType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/competitiontype": {
      "get": {
        "tags": [
          "CompetitionTypes"
        ],
        "summary": "Search all competitiontypes",
        "description": "Search for competitiontypes paged",
        "operationId": "SearchCompetitionTypes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of CompetitionType",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/competitionType"
                  }
                }
              }
            },
            "x-ms-summary": "CompetitionType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "CompetitionTypes"
        ],
        "summary": "Add a competitiontypes",
        "description": "Add a new competitiontype to the databsse",
        "operationId": "AddCompetitionType",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/competitionType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of CompetitionType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/competitionType"
                }
              }
            },
            "x-ms-summary": "CompetitionType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixture/{id}": {
      "get": {
        "tags": [
          "Fixtures"
        ],
        "summary": "Get a fixture",
        "description": "Gets a fixture from its database ID.",
        "operationId": "FindFixture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Fixture",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixture"
                }
              }
            },
            "x-ms-summary": "Fixture entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Fixtures"
        ],
        "summary": "Update a fixtures",
        "description": "Update a fixture in the database",
        "operationId": "UpdateFixture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Fixture",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixture"
                }
              }
            },
            "x-ms-summary": "Fixture entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Fixtures"
        ],
        "summary": "Delete a fixture",
        "description": "Delete a fixture from its database ID.",
        "operationId": "DeleteFixture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixture": {
      "get": {
        "tags": [
          "Fixtures"
        ],
        "summary": "Search all fixtures",
        "description": "Search for fixtures paged",
        "operationId": "SearchFixtures",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Fixture",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fixture"
                  }
                }
              }
            },
            "x-ms-summary": "Fixture entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Fixtures"
        ],
        "summary": "Add a fixtures",
        "description": "Add a new fixture to the databsse",
        "operationId": "AddFixture",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixture"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Fixture",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixture"
                }
              }
            },
            "x-ms-summary": "Fixture entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixtureevent/{id}": {
      "get": {
        "tags": [
          "FixtureEvents"
        ],
        "summary": "Get a fixtureevent",
        "description": "Gets a fixtureevent from its database ID.",
        "operationId": "FindFixtureEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of FixtureEvent",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureEvent"
                }
              }
            },
            "x-ms-summary": "FixtureEvent entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "FixtureEvents"
        ],
        "summary": "Update a fixtureevents",
        "description": "Update a fixtureevent in the database",
        "operationId": "UpdateFixtureEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of FixtureEvent",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureEvent"
                }
              }
            },
            "x-ms-summary": "FixtureEvent entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "FixtureEvents"
        ],
        "summary": "Delete a fixtureevent",
        "description": "Delete a fixtureevent from its database ID.",
        "operationId": "DeleteFixtureEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixtureevent": {
      "get": {
        "tags": [
          "FixtureEvents"
        ],
        "summary": "Search all fixtureevents",
        "description": "Search for fixtureevents paged",
        "operationId": "SearchFixtureEvents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of FixtureEvent",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fixtureEvent"
                  }
                }
              }
            },
            "x-ms-summary": "FixtureEvent entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "FixtureEvents"
        ],
        "summary": "Add a fixtureevents",
        "description": "Add a new fixtureevent to the databsse",
        "operationId": "AddFixtureEvent",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureEvent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of FixtureEvent",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureEvent"
                }
              }
            },
            "x-ms-summary": "FixtureEvent entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixtureofficialappointment/{id}": {
      "get": {
        "tags": [
          "FixtureOfficialAppointments"
        ],
        "summary": "Get a fixtureofficialappointment",
        "description": "Gets a fixtureofficialappointment from its database ID.",
        "operationId": "FindFixtureOfficialAppointment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of FixtureOfficialAppointment",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureOfficialAppointment"
                }
              }
            },
            "x-ms-summary": "FixtureOfficialAppointment entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "FixtureOfficialAppointments"
        ],
        "summary": "Update a fixtureofficialappointments",
        "description": "Update a fixtureofficialappointment in the database",
        "operationId": "UpdateFixtureOfficialAppointment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureOfficialAppointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of FixtureOfficialAppointment",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureOfficialAppointment"
                }
              }
            },
            "x-ms-summary": "FixtureOfficialAppointment entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "FixtureOfficialAppointments"
        ],
        "summary": "Delete a fixtureofficialappointment",
        "description": "Delete a fixtureofficialappointment from its database ID.",
        "operationId": "DeleteFixtureOfficialAppointment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixtureofficialappointment": {
      "get": {
        "tags": [
          "FixtureOfficialAppointments"
        ],
        "summary": "Search all fixtureofficialappointments",
        "description": "Search for fixtureofficialappointments paged",
        "operationId": "SearchFixtureOfficialAppointments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of FixtureOfficialAppointment",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fixtureOfficialAppointment"
                  }
                }
              }
            },
            "x-ms-summary": "FixtureOfficialAppointment entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "FixtureOfficialAppointments"
        ],
        "summary": "Add a fixtureofficialappointments",
        "description": "Add a new fixtureofficialappointment to the databsse",
        "operationId": "AddFixtureOfficialAppointment",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureOfficialAppointment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of FixtureOfficialAppointment",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureOfficialAppointment"
                }
              }
            },
            "x-ms-summary": "FixtureOfficialAppointment entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixtureplayer/{id}": {
      "get": {
        "tags": [
          "FixturePlayers"
        ],
        "summary": "Get a fixtureplayer",
        "description": "Gets a fixtureplayer from its database ID.",
        "operationId": "FindFixturePlayer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of FixturePlayer",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixturePlayer"
                }
              }
            },
            "x-ms-summary": "FixturePlayer entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "FixturePlayers"
        ],
        "summary": "Update a fixtureplayers",
        "description": "Update a fixtureplayer in the database",
        "operationId": "UpdateFixturePlayer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixturePlayer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of FixturePlayer",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixturePlayer"
                }
              }
            },
            "x-ms-summary": "FixturePlayer entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "FixturePlayers"
        ],
        "summary": "Delete a fixtureplayer",
        "description": "Delete a fixtureplayer from its database ID.",
        "operationId": "DeleteFixturePlayer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixtureplayer": {
      "get": {
        "tags": [
          "FixturePlayers"
        ],
        "summary": "Search all fixtureplayers",
        "description": "Search for fixtureplayers paged",
        "operationId": "SearchFixturePlayers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of FixturePlayer",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fixturePlayer"
                  }
                }
              }
            },
            "x-ms-summary": "FixturePlayer entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "FixturePlayers"
        ],
        "summary": "Add a fixtureplayers",
        "description": "Add a new fixtureplayer to the databsse",
        "operationId": "AddFixturePlayer",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixturePlayer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of FixturePlayer",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixturePlayer"
                }
              }
            },
            "x-ms-summary": "FixturePlayer entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixturestaff/{id}": {
      "get": {
        "tags": [
          "FixtureStaffs"
        ],
        "summary": "Get a fixturestaff",
        "description": "Gets a fixturestaff from its database ID.",
        "operationId": "FindFixtureStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of FixtureStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureStaff"
                }
              }
            },
            "x-ms-summary": "FixtureStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "FixtureStaffs"
        ],
        "summary": "Update a fixturestaffs",
        "description": "Update a fixturestaff in the database",
        "operationId": "UpdateFixtureStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureStaff"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of FixtureStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureStaff"
                }
              }
            },
            "x-ms-summary": "FixtureStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "FixtureStaffs"
        ],
        "summary": "Delete a fixturestaff",
        "description": "Delete a fixturestaff from its database ID.",
        "operationId": "DeleteFixtureStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/fixturestaff": {
      "get": {
        "tags": [
          "FixtureStaffs"
        ],
        "summary": "Search all fixturestaffs",
        "description": "Search for fixturestaffs paged",
        "operationId": "SearchFixtureStaffs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of FixtureStaff",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fixtureStaff"
                  }
                }
              }
            },
            "x-ms-summary": "FixtureStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "FixtureStaffs"
        ],
        "summary": "Add a fixturestaffs",
        "description": "Add a new fixturestaff to the databsse",
        "operationId": "AddFixtureStaff",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureStaff"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of FixtureStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/fixtureStaff"
                }
              }
            },
            "x-ms-summary": "FixtureStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/offencecode/{id}": {
      "get": {
        "tags": [
          "OffenceCodes"
        ],
        "summary": "Get a offencecode",
        "description": "Gets a offencecode from its database ID.",
        "operationId": "FindOffenceCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of OffenceCode",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/offenceCode"
                }
              }
            },
            "x-ms-summary": "OffenceCode entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "OffenceCodes"
        ],
        "summary": "Update a offencecodes",
        "description": "Update a offencecode in the database",
        "operationId": "UpdateOffenceCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/offenceCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of OffenceCode",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/offenceCode"
                }
              }
            },
            "x-ms-summary": "OffenceCode entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "OffenceCodes"
        ],
        "summary": "Delete a offencecode",
        "description": "Delete a offencecode from its database ID.",
        "operationId": "DeleteOffenceCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/offencecode": {
      "get": {
        "tags": [
          "OffenceCodes"
        ],
        "summary": "Search all offencecodes",
        "description": "Search for offencecodes paged",
        "operationId": "SearchOffenceCodes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of OffenceCode",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offenceCode"
                  }
                }
              }
            },
            "x-ms-summary": "OffenceCode entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "OffenceCodes"
        ],
        "summary": "Add a offencecodes",
        "description": "Add a new offencecode to the databsse",
        "operationId": "AddOffenceCode",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/offenceCode"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of OffenceCode",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/offenceCode"
                }
              }
            },
            "x-ms-summary": "OffenceCode entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/official/{id}": {
      "get": {
        "tags": [
          "Officials"
        ],
        "summary": "Get a official",
        "description": "Gets a official from its database ID.",
        "operationId": "FindOfficial",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Official",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/official"
                }
              }
            },
            "x-ms-summary": "Official entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Officials"
        ],
        "summary": "Update a officials",
        "description": "Update a official in the database",
        "operationId": "UpdateOfficial",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/official"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Official",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/official"
                }
              }
            },
            "x-ms-summary": "Official entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Officials"
        ],
        "summary": "Delete a official",
        "description": "Delete a official from its database ID.",
        "operationId": "DeleteOfficial",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/official": {
      "get": {
        "tags": [
          "Officials"
        ],
        "summary": "Search all officials",
        "description": "Search for officials paged",
        "operationId": "SearchOfficials",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Official",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/official"
                  }
                }
              }
            },
            "x-ms-summary": "Official entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Officials"
        ],
        "summary": "Add a officials",
        "description": "Add a new official to the databsse",
        "operationId": "AddOfficial",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/official"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Official",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/official"
                }
              }
            },
            "x-ms-summary": "Official entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/officialtype/{id}": {
      "get": {
        "tags": [
          "OfficialTypes"
        ],
        "summary": "Get a officialtype",
        "description": "Gets a officialtype from its database ID.",
        "operationId": "FindOfficialType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of OfficialType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/officialType"
                }
              }
            },
            "x-ms-summary": "OfficialType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "OfficialTypes"
        ],
        "summary": "Update a officialtypes",
        "description": "Update a officialtype in the database",
        "operationId": "UpdateOfficialType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/officialType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of OfficialType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/officialType"
                }
              }
            },
            "x-ms-summary": "OfficialType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "OfficialTypes"
        ],
        "summary": "Delete a officialtype",
        "description": "Delete a officialtype from its database ID.",
        "operationId": "DeleteOfficialType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/officialtype": {
      "get": {
        "tags": [
          "OfficialTypes"
        ],
        "summary": "Search all officialtypes",
        "description": "Search for officialtypes paged",
        "operationId": "SearchOfficialTypes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of OfficialType",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/officialType"
                  }
                }
              }
            },
            "x-ms-summary": "OfficialType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "OfficialTypes"
        ],
        "summary": "Add a officialtypes",
        "description": "Add a new officialtype to the databsse",
        "operationId": "AddOfficialType",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/officialType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of OfficialType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/officialType"
                }
              }
            },
            "x-ms-summary": "OfficialType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/season/{id}": {
      "get": {
        "tags": [
          "Seasons"
        ],
        "summary": "Get a season",
        "description": "Gets a season from its database ID.",
        "operationId": "FindSeason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Season",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/season"
                }
              }
            },
            "x-ms-summary": "Season entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Seasons"
        ],
        "summary": "Update a seasons",
        "description": "Update a season in the database",
        "operationId": "UpdateSeason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/season"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Season",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/season"
                }
              }
            },
            "x-ms-summary": "Season entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Seasons"
        ],
        "summary": "Delete a season",
        "description": "Delete a season from its database ID.",
        "operationId": "DeleteSeason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/season": {
      "get": {
        "tags": [
          "Seasons"
        ],
        "summary": "Search all seasons",
        "description": "Search for seasons paged",
        "operationId": "SearchSeasons",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Season",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/season"
                  }
                }
              }
            },
            "x-ms-summary": "Season entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Seasons"
        ],
        "summary": "Add a seasons",
        "description": "Add a new season to the databsse",
        "operationId": "AddSeason",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/season"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Season",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/season"
                }
              }
            },
            "x-ms-summary": "Season entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/stafftype/{id}": {
      "get": {
        "tags": [
          "StaffTypes"
        ],
        "summary": "Get a stafftype",
        "description": "Gets a stafftype from its database ID.",
        "operationId": "FindStaffType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of StaffType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/staffType"
                }
              }
            },
            "x-ms-summary": "StaffType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "StaffTypes"
        ],
        "summary": "Update a stafftypes",
        "description": "Update a stafftype in the database",
        "operationId": "UpdateStaffType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/staffType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of StaffType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/staffType"
                }
              }
            },
            "x-ms-summary": "StaffType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "StaffTypes"
        ],
        "summary": "Delete a stafftype",
        "description": "Delete a stafftype from its database ID.",
        "operationId": "DeleteStaffType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/stafftype": {
      "get": {
        "tags": [
          "StaffTypes"
        ],
        "summary": "Search all stafftypes",
        "description": "Search for stafftypes paged",
        "operationId": "SearchStaffTypes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of StaffType",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/staffType"
                  }
                }
              }
            },
            "x-ms-summary": "StaffType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "StaffTypes"
        ],
        "summary": "Add a stafftypes",
        "description": "Add a new stafftype to the databsse",
        "operationId": "AddStaffType",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/staffType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of StaffType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/staffType"
                }
              }
            },
            "x-ms-summary": "StaffType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/stage/{id}": {
      "get": {
        "tags": [
          "Stages"
        ],
        "summary": "Get a stage",
        "description": "Gets a stage from its database ID.",
        "operationId": "FindStage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Stage",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stage"
                }
              }
            },
            "x-ms-summary": "Stage entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Stages"
        ],
        "summary": "Update a stages",
        "description": "Update a stage in the database",
        "operationId": "UpdateStage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/stage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Stage",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stage"
                }
              }
            },
            "x-ms-summary": "Stage entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Stages"
        ],
        "summary": "Delete a stage",
        "description": "Delete a stage from its database ID.",
        "operationId": "DeleteStage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/stage": {
      "get": {
        "tags": [
          "Stages"
        ],
        "summary": "Search all stages",
        "description": "Search for stages paged",
        "operationId": "SearchStages",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Stage",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/stage"
                  }
                }
              }
            },
            "x-ms-summary": "Stage entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Stages"
        ],
        "summary": "Add a stages",
        "description": "Add a new stage to the databsse",
        "operationId": "AddStage",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/stage"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Stage",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stage"
                }
              }
            },
            "x-ms-summary": "Stage entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/stageruleset/{id}": {
      "get": {
        "tags": [
          "StageRulesets"
        ],
        "summary": "Get a stageruleset",
        "description": "Gets a stageruleset from its database ID.",
        "operationId": "FindStageRuleset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of StageRuleset",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stageRuleset"
                }
              }
            },
            "x-ms-summary": "StageRuleset entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "StageRulesets"
        ],
        "summary": "Update a stagerulesets",
        "description": "Update a stageruleset in the database",
        "operationId": "UpdateStageRuleset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/stageRuleset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of StageRuleset",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stageRuleset"
                }
              }
            },
            "x-ms-summary": "StageRuleset entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "StageRulesets"
        ],
        "summary": "Delete a stageruleset",
        "description": "Delete a stageruleset from its database ID.",
        "operationId": "DeleteStageRuleset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/stageruleset": {
      "get": {
        "tags": [
          "StageRulesets"
        ],
        "summary": "Search all stagerulesets",
        "description": "Search for stagerulesets paged",
        "operationId": "SearchStageRulesets",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of StageRuleset",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/stageRuleset"
                  }
                }
              }
            },
            "x-ms-summary": "StageRuleset entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "StageRulesets"
        ],
        "summary": "Add a stagerulesets",
        "description": "Add a new stageruleset to the databsse",
        "operationId": "AddStageRuleset",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/stageRuleset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of StageRuleset",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stageRuleset"
                }
              }
            },
            "x-ms-summary": "StageRuleset entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/stageteam/{id}": {
      "get": {
        "tags": [
          "StageTeams"
        ],
        "summary": "Get a stageteam",
        "description": "Gets a stageteam from its database ID.",
        "operationId": "FindStageTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of StageTeam",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stageTeam"
                }
              }
            },
            "x-ms-summary": "StageTeam entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "StageTeams"
        ],
        "summary": "Update a stageteams",
        "description": "Update a stageteam in the database",
        "operationId": "UpdateStageTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/stageTeam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of StageTeam",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stageTeam"
                }
              }
            },
            "x-ms-summary": "StageTeam entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "StageTeams"
        ],
        "summary": "Delete a stageteam",
        "description": "Delete a stageteam from its database ID.",
        "operationId": "DeleteStageTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/stageteam": {
      "get": {
        "tags": [
          "StageTeams"
        ],
        "summary": "Search all stageteams",
        "description": "Search for stageteams paged",
        "operationId": "SearchStageTeams",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of StageTeam",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/stageTeam"
                  }
                }
              }
            },
            "x-ms-summary": "StageTeam entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "StageTeams"
        ],
        "summary": "Add a stageteams",
        "description": "Add a new stageteam to the databsse",
        "operationId": "AddStageTeam",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/stageTeam"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of StageTeam",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/stageTeam"
                }
              }
            },
            "x-ms-summary": "StageTeam entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/team/{id}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get a team",
        "description": "Gets a team from its database ID.",
        "operationId": "FindTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Team",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            },
            "x-ms-summary": "Team entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Update a teams",
        "description": "Update a team in the database",
        "operationId": "UpdateTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/team"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Team",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            },
            "x-ms-summary": "Team entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Teams"
        ],
        "summary": "Delete a team",
        "description": "Delete a team from its database ID.",
        "operationId": "DeleteTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/team": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Search all teams",
        "description": "Search for teams paged",
        "operationId": "SearchTeams",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Team",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team"
                  }
                }
              }
            },
            "x-ms-summary": "Team entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Teams"
        ],
        "summary": "Add a teams",
        "description": "Add a new team to the databsse",
        "operationId": "AddTeam",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/team"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Team",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            },
            "x-ms-summary": "Team entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/teamfixtureresult/{id}": {
      "get": {
        "tags": [
          "TeamFixtureResults"
        ],
        "summary": "Get a teamfixtureresult",
        "description": "Gets a teamfixtureresult from its database ID.",
        "operationId": "FindTeamFixtureResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of TeamFixtureResult",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamFixtureResult"
                }
              }
            },
            "x-ms-summary": "TeamFixtureResult entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "TeamFixtureResults"
        ],
        "summary": "Update a teamfixtureresults",
        "description": "Update a teamfixtureresult in the database",
        "operationId": "UpdateTeamFixtureResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/teamFixtureResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of TeamFixtureResult",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamFixtureResult"
                }
              }
            },
            "x-ms-summary": "TeamFixtureResult entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "TeamFixtureResults"
        ],
        "summary": "Delete a teamfixtureresult",
        "description": "Delete a teamfixtureresult from its database ID.",
        "operationId": "DeleteTeamFixtureResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/teamfixtureresult": {
      "get": {
        "tags": [
          "TeamFixtureResults"
        ],
        "summary": "Search all teamfixtureresults",
        "description": "Search for teamfixtureresults paged",
        "operationId": "SearchTeamFixtureResults",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of TeamFixtureResult",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/teamFixtureResult"
                  }
                }
              }
            },
            "x-ms-summary": "TeamFixtureResult entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "TeamFixtureResults"
        ],
        "summary": "Add a teamfixtureresults",
        "description": "Add a new teamfixtureresult to the databsse",
        "operationId": "AddTeamFixtureResult",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/teamFixtureResult"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of TeamFixtureResult",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamFixtureResult"
                }
              }
            },
            "x-ms-summary": "TeamFixtureResult entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/teamplayer/{id}": {
      "get": {
        "tags": [
          "TeamPlayers"
        ],
        "summary": "Get a teamplayer",
        "description": "Gets a teamplayer from its database ID.",
        "operationId": "FindTeamPlayer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of TeamPlayer",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamPlayer"
                }
              }
            },
            "x-ms-summary": "TeamPlayer entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "TeamPlayers"
        ],
        "summary": "Update a teamplayers",
        "description": "Update a teamplayer in the database",
        "operationId": "UpdateTeamPlayer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/teamPlayer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of TeamPlayer",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamPlayer"
                }
              }
            },
            "x-ms-summary": "TeamPlayer entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "TeamPlayers"
        ],
        "summary": "Delete a teamplayer",
        "description": "Delete a teamplayer from its database ID.",
        "operationId": "DeleteTeamPlayer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/teamplayer": {
      "get": {
        "tags": [
          "TeamPlayers"
        ],
        "summary": "Search all teamplayers",
        "description": "Search for teamplayers paged",
        "operationId": "SearchTeamPlayers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of TeamPlayer",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/teamPlayer"
                  }
                }
              }
            },
            "x-ms-summary": "TeamPlayer entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "TeamPlayers"
        ],
        "summary": "Add a teamplayers",
        "description": "Add a new teamplayer to the databsse",
        "operationId": "AddTeamPlayer",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/teamPlayer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of TeamPlayer",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamPlayer"
                }
              }
            },
            "x-ms-summary": "TeamPlayer entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/teamstaff/{id}": {
      "get": {
        "tags": [
          "TeamStaffs"
        ],
        "summary": "Get a teamstaff",
        "description": "Gets a teamstaff from its database ID.",
        "operationId": "FindTeamStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of TeamStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamStaff"
                }
              }
            },
            "x-ms-summary": "TeamStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "TeamStaffs"
        ],
        "summary": "Update a teamstaffs",
        "description": "Update a teamstaff in the database",
        "operationId": "UpdateTeamStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/teamStaff"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of TeamStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamStaff"
                }
              }
            },
            "x-ms-summary": "TeamStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "TeamStaffs"
        ],
        "summary": "Delete a teamstaff",
        "description": "Delete a teamstaff from its database ID.",
        "operationId": "DeleteTeamStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/teamstaff": {
      "get": {
        "tags": [
          "TeamStaffs"
        ],
        "summary": "Search all teamstaffs",
        "description": "Search for teamstaffs paged",
        "operationId": "SearchTeamStaffs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of TeamStaff",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/teamStaff"
                  }
                }
              }
            },
            "x-ms-summary": "TeamStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "TeamStaffs"
        ],
        "summary": "Add a teamstaffs",
        "description": "Add a new teamstaff to the databsse",
        "operationId": "AddTeamStaff",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/teamStaff"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of TeamStaff",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/teamStaff"
                }
              }
            },
            "x-ms-summary": "TeamStaff entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user",
        "description": "Gets a user from its database ID.",
        "operationId": "FindUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of User",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "x-ms-summary": "User entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update a users",
        "description": "Update a user in the database",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of User",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "x-ms-summary": "User entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "Delete a user from its database ID.",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Search all users",
        "description": "Search for users paged",
        "operationId": "SearchUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of User",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            },
            "x-ms-summary": "User entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Add a users",
        "description": "Add a new user to the databsse",
        "operationId": "AddUser",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of User",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "x-ms-summary": "User entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/venue/{id}": {
      "get": {
        "tags": [
          "Venues"
        ],
        "summary": "Get a venue",
        "description": "Gets a venue from its database ID.",
        "operationId": "FindVenue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Venue",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/venue"
                }
              }
            },
            "x-ms-summary": "Venue entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "Venues"
        ],
        "summary": "Update a venues",
        "description": "Update a venue in the database",
        "operationId": "UpdateVenue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/venue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of Venue",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/venue"
                }
              }
            },
            "x-ms-summary": "Venue entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Venues"
        ],
        "summary": "Delete a venue",
        "description": "Delete a venue from its database ID.",
        "operationId": "DeleteVenue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/venue": {
      "get": {
        "tags": [
          "Venues"
        ],
        "summary": "Search all venues",
        "description": "Search for venues paged",
        "operationId": "SearchVenues",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Venue",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/venue"
                  }
                }
              }
            },
            "x-ms-summary": "Venue entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Venues"
        ],
        "summary": "Add a venues",
        "description": "Add a new venue to the databsse",
        "operationId": "AddVenue",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/venue"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of Venue",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/venue"
                }
              }
            },
            "x-ms-summary": "Venue entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/venuetype/{id}": {
      "get": {
        "tags": [
          "VenueTypes"
        ],
        "summary": "Get a venuetype",
        "description": "Gets a venuetype from its database ID.",
        "operationId": "FindVenueType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of VenueType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/venueType"
                }
              }
            },
            "x-ms-summary": "VenueType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "tags": [
          "VenueTypes"
        ],
        "summary": "Update a venuetypes",
        "description": "Update a venuetype in the database",
        "operationId": "UpdateVenueType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/venueType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payload of VenueType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/venueType"
                }
              }
            },
            "x-ms-summary": "VenueType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "VenueTypes"
        ],
        "summary": "Delete a venuetype",
        "description": "Delete a venuetype from its database ID.",
        "operationId": "DeleteVenueType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The database id of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No description"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/venuetype": {
      "get": {
        "tags": [
          "VenueTypes"
        ],
        "summary": "Search all venuetypes",
        "description": "Search for venuetypes paged",
        "operationId": "SearchVenueTypes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The amount of results to return.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of VenueType",
            "content": {
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/venueType"
                  }
                }
              }
            },
            "x-ms-summary": "VenueType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "VenueTypes"
        ],
        "summary": "Add a venuetypes",
        "description": "Add a new venuetype to the databsse",
        "operationId": "AddVenueType",
        "requestBody": {
          "content": {
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/venueType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payload of VenueType",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/venueType"
                }
              }
            },
            "x-ms-summary": "VenueType entity"
          }
        },
        "security": [
          {
            "function_key": [ ]
          },
          {
            "bearer_auth": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    }
  },
  "components": {
    "schemas": {
      "adjustmentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "association": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "associationStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/associationStaff"
            }
          },
          "associationTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/associationTeam"
            }
          },
          "competitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/competition"
            }
          },
          "seasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/season"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/team"
            }
          }
        }
      },
      "associationStaff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "forename": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "photo": {
            "type": "string"
          },
          "associationId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "associationStaffTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "association": {
            "$ref": "#/components/schemas/association"
          },
          "associationStaffType": {
            "$ref": "#/components/schemas/associationStaffType"
          },
          "user": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "associationStaffType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "associationStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/associationStaff"
            }
          }
        }
      },
      "associationTeam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "associationId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "association": {
            "$ref": "#/components/schemas/association"
          },
          "team": {
            "$ref": "#/components/schemas/team"
          }
        }
      },
      "club": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/team"
            }
          }
        }
      },
      "competition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "associationId": {
            "type": "string",
            "format": "uuid"
          },
          "competitionTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "association": {
            "$ref": "#/components/schemas/association"
          },
          "competitionSeasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/competitionSeason"
            }
          },
          "competitionType": {
            "$ref": "#/components/schemas/competitionType"
          }
        }
      },
      "competitionSeason": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "competitionId": {
            "type": "string",
            "format": "uuid"
          },
          "seasonId": {
            "type": "string",
            "format": "uuid"
          },
          "competition": {
            "$ref": "#/components/schemas/competition"
          },
          "season": {
            "$ref": "#/components/schemas/season"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stage"
            }
          }
        }
      },
      "competitionType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "competitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/competition"
            }
          }
        }
      },
      "fixture": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "string"
          },
          "venueId": {
            "type": "string",
            "format": "uuid"
          },
          "homeTeamId": {
            "type": "string",
            "format": "uuid"
          },
          "awayTeamId": {
            "type": "string",
            "format": "uuid"
          },
          "stageId": {
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "awayTeam": {
            "$ref": "#/components/schemas/team"
          },
          "fixtureEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureEvent"
            }
          },
          "fixtureOfficialAppointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureOfficialAppointment"
            }
          },
          "fixturePlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixturePlayer"
            }
          },
          "fixtureStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureStaff"
            }
          },
          "homeTeam": {
            "$ref": "#/components/schemas/team"
          },
          "stage": {
            "$ref": "#/components/schemas/stage"
          },
          "teamFixtureResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamFixtureResult"
            }
          },
          "venue": {
            "$ref": "#/components/schemas/venue"
          }
        }
      },
      "fixtureEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string"
          },
          "offenceCodeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "fixtureId": {
            "type": "string",
            "format": "uuid"
          },
          "officialId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "staffId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "playerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "playerOffId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "eventType": {
            "type": "integer",
            "format": "int32"
          },
          "fixture": {
            "$ref": "#/components/schemas/fixture"
          },
          "offenceCode": {
            "$ref": "#/components/schemas/offenceCode"
          },
          "official": {
            "$ref": "#/components/schemas/official"
          },
          "player": {
            "$ref": "#/components/schemas/teamPlayer"
          },
          "playerOff": {
            "$ref": "#/components/schemas/teamPlayer"
          },
          "staff": {
            "$ref": "#/components/schemas/teamStaff"
          }
        }
      },
      "fixtureOfficialAppointment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "officialId": {
            "type": "string",
            "format": "uuid"
          },
          "fixtureId": {
            "type": "string",
            "format": "uuid"
          },
          "officialTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "officialAppointmentStatus": {
            "type": "integer",
            "format": "int32"
          },
          "fixture": {
            "$ref": "#/components/schemas/fixture"
          },
          "official": {
            "$ref": "#/components/schemas/official"
          },
          "officialType": {
            "$ref": "#/components/schemas/officialType"
          }
        }
      },
      "fixturePlayer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "squadNum": {
            "type": "integer",
            "format": "int32"
          },
          "captain": {
            "type": "boolean"
          },
          "starting": {
            "type": "boolean"
          },
          "keeper": {
            "type": "boolean"
          },
          "substitute": {
            "type": "boolean"
          },
          "trialist": {
            "type": "boolean"
          },
          "trialistName": {
            "type": "string"
          },
          "fixtureId": {
            "type": "string",
            "format": "uuid"
          },
          "teamPlayerId": {
            "type": "string",
            "format": "uuid"
          },
          "fixture": {
            "$ref": "#/components/schemas/fixture"
          },
          "teamPlayer": {
            "$ref": "#/components/schemas/teamPlayer"
          }
        }
      },
      "fixtureStaff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fixtureId": {
            "type": "string",
            "format": "uuid"
          },
          "teamStaffId": {
            "type": "string",
            "format": "uuid"
          },
          "staffTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "fixture": {
            "$ref": "#/components/schemas/fixture"
          },
          "staffType": {
            "$ref": "#/components/schemas/staffType"
          },
          "teamStaff": {
            "$ref": "#/components/schemas/teamStaff"
          }
        }
      },
      "offenceCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "eventType": {
            "type": "integer",
            "format": "int32"
          },
          "fixtureEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureEvent"
            }
          }
        }
      },
      "official": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "forename": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "registrationData": {
            "type": "string"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "photo": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "fixtureEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureEvent"
            }
          },
          "fixtureOfficialAppointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureOfficialAppointment"
            }
          },
          "teamFixtureResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamFixtureResult"
            }
          },
          "user": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "officialType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fixtureOfficialAppointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureOfficialAppointment"
            }
          }
        }
      },
      "season": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "associationId": {
            "type": "string",
            "format": "uuid"
          },
          "association": {
            "$ref": "#/components/schemas/association"
          },
          "competitionSeasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/competitionSeason"
            }
          }
        }
      },
      "staffType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fixtureStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureStaff"
            }
          },
          "teamStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamStaff"
            }
          }
        }
      },
      "stage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "competitionSeasonId": {
            "type": "string",
            "format": "uuid"
          },
          "stageRulesetId": {
            "type": "string",
            "format": "uuid"
          },
          "competitionSeason": {
            "$ref": "#/components/schemas/competitionSeason"
          },
          "fixtures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixture"
            }
          },
          "stageRuleset": {
            "$ref": "#/components/schemas/stageRuleset"
          },
          "stageTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stageTeam"
            }
          }
        }
      },
      "stageRuleset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "periods": {
            "type": "integer",
            "format": "int32"
          },
          "etPeriods": {
            "type": "integer",
            "format": "int32"
          },
          "penalties": {
            "type": "boolean"
          },
          "periodDuration": {
            "type": "integer",
            "format": "int32"
          },
          "etPeriodDuration": {
            "type": "integer",
            "format": "int32"
          },
          "numberStarting": {
            "type": "integer",
            "format": "int32"
          },
          "numberSubs": {
            "type": "integer",
            "format": "int32"
          },
          "pointsWin": {
            "type": "integer",
            "format": "int32"
          },
          "pointsDraw": {
            "type": "integer",
            "format": "int32"
          },
          "pointsLoss": {
            "type": "integer",
            "format": "int32"
          },
          "headToHead": {
            "type": "boolean"
          },
          "numberTrialists": {
            "type": "integer",
            "format": "int32"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stage"
            }
          }
        }
      },
      "stageTeam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "stageId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "stage": {
            "$ref": "#/components/schemas/stage"
          },
          "team": {
            "$ref": "#/components/schemas/team"
          }
        }
      },
      "team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "colours": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "clubId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "venueId": {
            "type": "string",
            "format": "uuid"
          },
          "associationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "association": {
            "$ref": "#/components/schemas/association"
          },
          "associationTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/associationTeam"
            }
          },
          "club": {
            "$ref": "#/components/schemas/club"
          },
          "fixtureAwayTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixture"
            }
          },
          "fixtureHomeTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixture"
            }
          },
          "stageTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stageTeam"
            }
          },
          "teamFixtureResultAways": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamFixtureResult"
            }
          },
          "teamFixtureResultHomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamFixtureResult"
            }
          },
          "teamPlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamPlayer"
            }
          },
          "teamStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamStaff"
            }
          },
          "venue": {
            "$ref": "#/components/schemas/venue"
          }
        }
      },
      "teamFixtureResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "homeScore": {
            "type": "integer",
            "format": "int32"
          },
          "awayScore": {
            "type": "integer",
            "format": "int32"
          },
          "homeAetScore": {
            "type": "integer",
            "format": "int32"
          },
          "awayAetScore": {
            "type": "integer",
            "format": "int32"
          },
          "homeTeamPenaltyScore": {
            "type": "integer",
            "format": "int32"
          },
          "awayTeamPenaltyScore": {
            "type": "integer",
            "format": "int32"
          },
          "fixtureId": {
            "type": "string",
            "format": "uuid"
          },
          "homeId": {
            "type": "string",
            "format": "uuid"
          },
          "awayId": {
            "type": "string",
            "format": "uuid"
          },
          "refereeId": {
            "type": "string",
            "format": "uuid"
          },
          "venueId": {
            "type": "string",
            "format": "uuid"
          },
          "away": {
            "$ref": "#/components/schemas/team"
          },
          "fixture": {
            "$ref": "#/components/schemas/fixture"
          },
          "home": {
            "$ref": "#/components/schemas/team"
          },
          "referee": {
            "$ref": "#/components/schemas/official"
          },
          "venue": {
            "$ref": "#/components/schemas/venue"
          }
        }
      },
      "teamPlayer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "forename": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "squadNumber": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "fixtureEventPlayerOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureEvent"
            }
          },
          "fixtureEventPlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureEvent"
            }
          },
          "fixturePlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixturePlayer"
            }
          },
          "team": {
            "$ref": "#/components/schemas/team"
          },
          "user": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "teamStaff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "forename": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "photo": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "staffTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "fixtureEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureEvent"
            }
          },
          "fixtureStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixtureStaff"
            }
          },
          "staffType": {
            "$ref": "#/components/schemas/staffType"
          },
          "team": {
            "$ref": "#/components/schemas/team"
          },
          "user": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "forename": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "associationStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/associationStaff"
            }
          },
          "officials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/official"
            }
          },
          "teamPlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamPlayer"
            }
          },
          "teamStaffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamStaff"
            }
          }
        }
      },
      "venue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "venueTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "fixtures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fixture"
            }
          },
          "teamFixtureResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamFixtureResult"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/team"
            }
          },
          "venueType": {
            "$ref": "#/components/schemas/venueType"
          }
        }
      },
      "venueType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "venues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/venue"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "function_key": {
        "type": "apiKey",
        "name": "code",
        "in": "header"
      },
      "bearer_auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}